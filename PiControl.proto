/**
 *  Copyright 2024 Thomas Bonk
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http: *www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

syntax = "proto3";

message MessageHeaders {
   // Source contains the topic where a reply should be send to.
   // It depends on the message whether a reply is sent or not; if one is
   // send, it is send to this topic.
   string source = 1;
}

// ----- Reading registered accessories -----

// TOPIC: coordinator/accessories
message ReadAccessories {
    MessageHeaders headers = 1;
}

message Accessory {
    // the id is a UUID string
    string id = 1;
    string name = 2;
}

// TOPIC: controller/<ctrlId>/accessories
message Accessories {
    MessageHeaders headers = 1;

    repeated Accessory accessories = 2;
}


// ----- Read devices -----

// TOPICS:
// - coordinator/devices
// - accessory/<accId>/available-devices
message ReadDevices {
    MessageHeaders headers = 1;
}

message Device {
    Accessory accessory = 1;

    string id = 2;
    string name = 3;
}

// TOPICS:
// - controller/<ctrlId>/devices
// - controller/<ctrlId>/<accId>/available-devices
message Devices {
    MessageHeaders headers = 1;

    repeated Device devices = 2;
}


// ----- Register Accessory -----

enum AccessoryAuthenticationMethod {
    NONE            = 0;
    PIN             = 1;
    PASSWD          = 2;
    USR_PASSWD      = 3;
}

// TOPIC: coordinator/register-accessory
message RegisterAccessory {
    MessageHeaders        headers                 = 1;

    // the id is a UUID string
    string                          id                      = 2;
    string                          name                    = 3;
    AccessoryAuthenticationMethod   authenticationMethod    = 4;
}


// ----- Register Device -----

// TOPIC: coordinator/register-device
message RegisterDevice {
    MessageHeaders        headers                 = 1;

    Accessory                       accessory               = 2;
    string                          id                      = 3;
    string                          name                    = 4;
}
